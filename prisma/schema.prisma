generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                  @id @default(autoincrement())
  firstName         String
  lastName          String?
  email             String               @unique
  password          String
  image             String?
  createdAt         DateTime             @default(now())
  userTypeId        Int

  reviews           Review[]
  authors           Author[]
  userType          UserType             @relation(fields: [userTypeId], references: [id])
  socialMedia       UserSocialMedia[]
}

model Book {
  id                Int                  @id @default(autoincrement())
  name              String
  bookTypeId        Int
  genreId           Int
  publicationDate   DateTime
  description       String
  idReference       String
  image             String?

  authors           AuthorBook[]
  reviews           Review[]
  bookType          BookType             @relation(fields: [bookTypeId], references: [id])
  genre             Genre                @relation(fields: [genreId], references: [id])
}

model Review {
  id                Int                  @id @default(autoincrement())
  userId            Int
  bookId            Int
  rating            Int
  comment           String?
  createdAt         DateTime             @default(now())

  user              User                 @relation(fields: [userId], references: [id])
  book              Book                 @relation(fields: [bookId], references: [id])
}

model SocialMedia {
  id                Int                  @id @default(autoincrement())
  name              String

  users             UserSocialMedia[]
}

model UserSocialMedia {
  id                Int                  @id @default(autoincrement())
  userId            Int
  socialMediaId     Int
  url               String

  user              User                 @relation(fields: [userId], references: [id])
  socialMedia       SocialMedia          @relation(fields: [socialMediaId], references: [id])
}

model UserType {
  id                Int                  @id @default(autoincrement())
  name              String

  users             User[]
}

model BookType {
  id                Int                  @id @default(autoincrement())
  name              String

  books             Book[]
}

model Genre {
  id                Int                  @id @default(autoincrement())
  name              String

  books             Book[]
}

model Author {
  id                Int                  @id @default(autoincrement())
  userId            Int
  artisticName      String?

  user              User                 @relation(fields: [userId], references: [id])
  authorBooks       AuthorBook[]
}

model AuthorBook {
  id                Int                  @id @default(autoincrement())
  authorId          Int
  bookId            Int
  creationDate      DateTime             @default(now())

  author            Author               @relation(fields: [authorId], references: [id])
  book              Book                 @relation(fields: [bookId], references: [id])
}